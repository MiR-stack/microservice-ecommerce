version: "3.8"
services:
  kong-database:
    image: postgres:9.6
    container_name: kong-postgres
    restart: on-failure
    networks:
      - kong-net
    volumes:
      - kong_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_DB: kong
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 10s
  # kong database migration
  kong-migration:
    build:
      context: ./config
      dockerfile: Dockerfile
    command: kong migrations bootstrap
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: kong
    depends_on:
      - kong-database

  #kong the API gateway
  kong:
    build:
      context: ./config
      dockerfile: Dockerfile
    container_name: kong
    restart: on-failure
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: kong
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"

      KONG_PG_TIMEOUT: 600000
      KONG_NGINX_WORKER_PROCESSES: 2
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr

      KONG_PLUGINSERVER_NAMES: js
      KONG_PLUGINSERVER_JS_SOCKET: /usr/local/kong/sockets/js-pluginserver.sock
      KONG_PLUGINSERVER_JS_START_CMD: "/usr/local/bin/kong-js-pluginserver --plugins-directory /usr/local/kong/js-plugins"
      KONG_PLUGINSERVER_JS_QUERY_CMD: "/usr/local/bin/kong-js-pluginserver --plugins-directory /usr/local/kong/js-plugins --dump-all-plugins"
      KONG_PLUGINS: "bundled,custom-auth"
      KONG_LOG_LEVEL: debug
      KONG_PLUGINSERVER_JS_SOCKET_NAME: js

      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_DNS_NO_SYNC: "off"
      KONG_DNS_ERROR_TTL: 1
      KONG_DNS_STALE_TTL: 10
      KONG_DNS_CACHE_SIZE: 10000
      KONG_DNS_NOT_FOUND_TTL: 30
      KONG_UPSTREAM_KEEPALIVE_POOL_SIZE: 10
      KONG_DB_UPDATE_FREQUENCY: 300
      KONG_DB_UPDATE_PROPAGATION: 1

    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 30s
      timeout: 30s
      retries: 15
      start_period: 30s
    depends_on:
      kong-database:
        condition: service_healthy
      kong-migration:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
      - "8002:8001"
      - "8443:8443"
      - "8444:8444"
    volumes:
      - ./config/plugins:/usr/local/kong/plugins

  #konga database prepare
  konga-prepare:
    image: pantsel/konga:latest
    command: "-c prepare -a postgres -u postgresql://kong:kong@kong-database:5432/konga"
    networks:
      - kong-net
    restart: on-failure
    depends_on:
      - kong-database

  #konga GUI
  konga:
    image: pantsel/konga:latest
    restart: always
    networks:
      - kong-net
    environment:
      TOKEN_SECRET: my_secret
      NODE_ENV: production
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: kong
      DB_DATABASE: konga
      KONGA_HOOK_TIMEOUT: 120000
      DB_PG_SCHEMA: public
      NODE_TLS_REJECT_UNAUTHORIZED: 0
      KONG_ADMIN_URL: http://kong:8001
    ports:
      - "1337:1337"
    depends_on:
      - kong-database
volumes:
  kong_data:
  plugin-socket:

networks:
  kong-net:
    external: false
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
